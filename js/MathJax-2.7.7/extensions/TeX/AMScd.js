MathJax.Extension["TeX/AMScd"]={version:"2.7.7",config:MathJax.Hub.CombineConfig("TeX.CD",{colspace:"5pt",rowspace:"5pt",harrowsize:"2.75em",varrowsize:"1.75em",hideHorizontalLabels:!1})},MathJax.Hub.Register.StartupHook("TeX Jax Ready",function(){var c=MathJax.ElementJax.mml,l=MathJax.InputJax.TeX,p=l.Stack.Item,t=l.Definitions,d=MathJax.Extension["TeX/AMScd"].config;t.environment.CD="CD_env",t.special["@"]="CD_arrow",t.macros.minCDarrowwidth="CD_minwidth",t.macros.minCDarrowheight="CD_minheight",l.Parse.Augment({CD_env:function(t){return this.Push(t),p.array().With({arraydef:{columnalign:"center",columnspacing:d.colspace,rowspacing:d.rowspace,displaystyle:!0},minw:this.stack.env.CD_minw||d.harrowsize,minh:this.stack.env.CD_minh||d.varrowsize})},CD_arrow:function(t){var e=this.string.charAt(this.i);if(!e.match(/[><VA.|=]/))return this.Other(t);this.i++;for(var i=this.stack.Top(),a=(i.isa(p.array)&&!i.data.length||(this.CD_cell(t),i=this.stack.Top()),i.table.length%2==1),s=(i.row.length+(a?0:1))%2;s;)this.CD_cell(t),s--;var h,n,r,m,a={minsize:i.minw,stretchy:!0},o={minsize:i.minh,stretchy:!0,symmetric:!0,lspace:0,rspace:0};"."!==e&&("|"===e?m=this.mmlToken(c.mo("∥").With(o)):"="===e?m=this.mmlToken(c.mo("=").With(a)):(h={">":"→","<":"←",V:"↓",A:"↑"}[e],n=this.GetUpTo(t+e,e),r=this.GetUpTo(t+e,e),">"===e||"<"===e?(m=c.mo(h).With(a),((n=n||"\\kern "+i.minw)||r)&&(e={width:"+11mu",lspace:"6mu"},m=c.munderover(this.mmlToken(m)),n&&(n=l.Parse(n,this.stack.env).mml(),m.SetData(m.over,c.mpadded(n).With(e).With({voffset:".1em"}))),r&&(r=l.Parse(r,this.stack.env).mml(),m.SetData(m.under,c.mpadded(r).With(e))),d.hideHorizontalLabels&&(m=c.mpadded(m).With({depth:0,height:".67em"})))):(m=h=this.mmlToken(c.mo(h).With(o)),(n||r)&&(m=c.mrow(),n&&m.Append(l.Parse("\\scriptstyle\\llap{"+n+"}",this.stack.env).mml()),m.Append(h.With({texClass:c.TEXCLASS.ORD})),r&&m.Append(l.Parse("\\scriptstyle\\rlap{"+r+"}",this.stack.env).mml()))))),m&&this.Push(m),this.CD_cell(t)},CD_cell:function(t){var e=this.stack.Top();(e.table||[]).length%2==0&&0===(e.row||[]).length&&this.Push(c.mpadded().With({height:"8.5pt",depth:"2pt"})),this.Push(p.cell().With({isEntry:!0,name:t}))},CD_minwidth:function(t){this.stack.env.CD_minw=this.GetDimen(t)},CD_minheight:function(t){this.stack.env.CD_minh=this.GetDimen(t)}})}),MathJax.Ajax.loadComplete("[MathJax]/extensions/TeX/AMScd.js");